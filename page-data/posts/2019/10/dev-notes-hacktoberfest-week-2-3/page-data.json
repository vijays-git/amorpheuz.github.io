{"componentChunkName":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js","path":"/posts/2019/10/dev-notes-hacktoberfest-week-2-3/","result":{"data":{"mdx":{"id":"9a9dac53-85fd-54cc-91f6-3cf3facd6804","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dev Diary - Hacktoberfest 2019, Week 2 & 3 - Refactors and Bug Fixes!\",\n  \"tags\": [\"javascript\", \"css\", \"hacktoberfest\", \"webdev\"],\n  \"date\": \"2019-10-20T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello Everyone! During week 1, I had sent out my first PR to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to\"\n  }), \"DEV\"), \" Repo, and I continued the mission through weeks 2 and 3. I have already become considerably familiar with workings of the Repo and thus felt it was the better choice while I had less time to spare. By the way, do check out their Repo if you haven't yet!\"), mdx(\"p\", null, \"For Week 2, the issue I helped tackle was \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/issues/3777\"\n  }), \"Issue #3777\"), \". An issue for fixing lint errors throughout the JavaScript files of the repo.\"), mdx(\"p\", null, \"It consisted of tons of files that required fixing and it was recommended to resolve one file at a time. By the time I viewed the issue, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/rhymes\"\n  }), \"Rhymes\"), \" had already listed an extremely helpful task-list for the list of remaining files and was actively helping out to mark which files had already been grabbed or were still up for grabs. I started taking grabbing one file at a time and resolving them one after another. While testing out one of the Pull Requests fully, I also ended up on an issue where Errors were being printed to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/Comments\"), \" sub-page of the articles due to it trying to reference an element that is only present on the article page itself. Here's a list of all the PRs I opened for the files I fixed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4303\"\n  }), \"Refactor initializeArticleReactions.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4318\"\n  }), \"Refactor/fix initializeCommentDropdown.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4319\"\n  }), \"Fix eslint issues in initializeCommentDate.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4320\"\n  }), \"Fix eslint issues in initializeCommentPreview.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4329\"\n  }), \"Fix eslint issues in initializeSettings.js\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4446\"\n  }), \"Fix JavaScript Console errors in /Comments sub-page of any article\"))), mdx(\"p\", null, \"\\uD83E\\uDD2F\\uD83E\\uDD2F So many of them! Even I don't know how I managed that. They weren't smooth sailing but I did learn a lot of lessons while tackling them!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always test-out manually whatever you are refactoring. Just because it's appearing correct visually doesn't mean it is fully working. I noticed the reaction numbers loading correctly but forgot to test out the functionality for actually reacting to the article which turned out to be broken. \\uD83D\\uDE05\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Never forget to check the contents of a file it runs an eslint auto-fix due to a pre-commit hook. Turns out it might break itself. \\uD83D\\uDE06\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"if(element)\"), \" is a thing in JavaScript, the things about JavaScript I learn daily, hehe. \\uD83D\\uDE05\\uD83D\\uDE05\")), mdx(\"p\", null, \"That list also means I have fully completed the Hacktoberfest Challenge. But I feel unsatisfied! Surely I am not the only one? Turns out I ain't, I loved reading that so many others were feeling the same and had become addicted to contributing! Maybe I am one of them now. \\uD83D\\uDE33 Yay! \\uD83C\\uDF89\\uD83C\\uDF89\"), mdx(\"p\", null, \"Week 3 turned out to be a Responsiveness fix. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"Dev.to\"\n  }), \"Dev.to\"), \" has slowly become my pastime for the day when I am out and about, maybe chilling a bit post-lunch or riding a taxi back home (Darn you rains). Thus a lot of browsing was done on my trusty smartphone, via the PWA. While replying to one of the Hacktoberfest posts, I tried attaching a Screenshot and turns out Images were overflowing the container in the Comment Previews!? Time to open an issue, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/issues/4382\"\n  }), \"Images in comment preview are not scaled down to container width on mobile #4382\"), \". \\uD83D\\uDC68\\u200D\\uD83D\\uDCBB \"), mdx(\"p\", null, \"I picked it up once I was done with the Refactor fixes and opened my favorite browser to tackle such issues, the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.mozilla.org/en-US/firefox/developer/\"\n  }), \"Firefox Developer Edition\"), \". Seriously, give it a try if you have never done it, I ensure you it will be love at first sight! I straight up opened two tabs, one with the comment preview and one with an article preview (which I knew worked correctly). I compared the behavior of images on both and found the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"img\"), \" element in comment preview to be lacking the CSS \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"max-width: 100%\"), \". Next, I tackled on how to ensure that the CSS only affects the images inside the preview-box of the comments and Aha! I had a working solution. I tested it out with varying resolutions to ensure that no funny behavior was occurring and opened my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4466\"\n  }), \"PR\"), \".\"), mdx(\"p\", null, \"Currently, I am waiting for my PR to get fully approved and resolve errors if any. My aim for the remainder of Hacktoberfest is to find a new Repo to contribute to and successfully submit a satisfying PR. How is your Hacktoberfest going till now? Feel free to hit me up in DMs for any beginner-ish level troubles you are encountering with Hacktoberfest. Have a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"PR filled\"), \" Hacktoberfest to you all! \\uD83C\\uDF86\\uD83C\\uDF8A\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Hello Everyone! During week 1, I had sent out my first PR to the  DEV  Repo, and I continued the mission through weeks 2 and 3. I haveâ€¦","timeToRead":3,"wordCount":{"words":713},"frontmatter":{"title":"Dev Diary - Hacktoberfest 2019, Week 2 & 3 - Refactors and Bug Fixes!","tags":["javascript","css","hacktoberfest","webdev"],"date":"2019-10-20T00:00:00.000Z","dateModified":null,"author":null,"status":null,"isPrivate":null,"featuredImage":null,"embeddedImages":null},"fields":{"slug":"/posts/2019/10/dev-notes-hacktoberfest-week-2-3/","owner":"source","parent":"posts"}}},"pageContext":{"id":"9a9dac53-85fd-54cc-91f6-3cf3facd6804","prev":{"frontmatter":{"title":"The Onion Rooting","status":null},"fields":{"slug":"/projects/onion-rooting/"}},"next":{"frontmatter":{"title":"Adding the DEV badge to github.dev starter website","status":null},"fields":{"slug":"/posts/2019/10/adding-dev-badge-to-github-starter/"}},"parent":"posts"}}}