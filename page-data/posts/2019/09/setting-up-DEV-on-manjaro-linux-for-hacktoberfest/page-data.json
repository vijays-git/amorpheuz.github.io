{"componentChunkName":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js","path":"/posts/2019/09/setting-up-DEV-on-manjaro-linux-for-hacktoberfest/","result":{"data":{"mdx":{"id":"81928890-bbd6-5721-81f6-44c10f7dc43d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setting up Dev.to on Manjaro Linux for Hacktoberfest\",\n  \"tags\": [\"hacktoberfest\", \"linux\", \"manjaro\", \"tutorial\"],\n  \"date\": \"2019-09-30T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"EDIT\"), mdx(\"p\", null, \"The guide is no longer up to date as there have been significant changes to the platform. Do refer to latest guidelines on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.dev.to/\"\n  }), \"https://docs.dev.to/\"), \" . Feel free to dm me if you are facing any trouble in the setup procedure on Manjaro!\"), mdx(\"hr\", null), mdx(\"h2\", null, \"The guide\"), mdx(\"p\", null, \"As Hacktoberfest approached and my WSL setup of dev.to's repo not behaving properly when it comes to Acceptance testing; I finally steeled myself up for switching to a Linux distro for the same. Manjaro had always been on the back of my find from reading a lot of praise about it online and hearing about it from peers. I wanted something beginner-friendly, with a great team & community behind it along with the ability to game smoothly during the rare occasions I was free. Manjaro seemed to check all these boxes and thus I was all aboard the Manjaro train.\"), mdx(\"p\", null, \"On a different note, this post is also going to talk about my experience too along with the steps. I also won't go fully into finer details of every step as that will make this guide more into a booklet, feel free to ask below if you are stuck somewhere!\"), mdx(\"h3\", null, \"Installing Manjaro\"), mdx(\"p\", null, \"I am seriously amazed by how easy it was to install Manjaro compared to my previous experience with Fedora. I feel it was the experience and confidence I gained messing about in fedora and WSL along with the very detailed guide Manjaro provides.\"), mdx(\"p\", null, \"I am not going to go into the install that much, and you should refer to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://manjaro.org/support/userguide/\"\n  }), \"Installation guide\"), \" and find the various flavors of the same at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://manjaro.org/download/\"\n  }), \"https://manjaro.org/download/\"), \".\"), mdx(\"p\", null, \"There are a ton of options depending on what kind of environment you want, each flavor curating to a particular cause. I went with the KDE Plasma Version.\"), mdx(\"h3\", null, \"Personal Prerequisites\"), mdx(\"p\", null, \"Once my Manjaro was smoothly running, I began with downloading all my development necessities. The list turned out to be:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"VS Code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GitKraken\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Chrome\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spotify\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://snapcraft.io/\"\n  }), \"Snapcraft\"), \" is a great app store for all your Linux needs and has easy to install packages of many major app publishers. Manjaro comes with a great GUI app that manages not only Snap packages but also \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://flatpak.org/\"\n  }), \"Flatpak\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://aur.archlinux.org/\"\n  }), \"AUR\"), \" packages called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vinifmor/bauh\"\n  }), \"Bauh\"), \". Search your applications in the same and you will find it easily. \"), mdx(\"p\", null, \"I grabbed the Snaps for Spotify and GitKraken via Bauh but from past experience of VS Code's Snap misbehaving I decided to take a different route for it and Google Chrome.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://aur.archlinux.org/packages/visual-studio-code-bin/\"\n  }), \"VS Code\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://aur.archlinux.org/packages/google-chrome/\"\n  }), \"Google Chrome\"), \" both have AUR packages that I grabbed off the website and installed. The steps are the same for both and are as follow:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git clone\"), \" along with the Git Clone URL on the package page to download the repo at the location of your choice.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Take your terminal into the downloaded repo via \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Cd\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"makepkg -si\"), \" where \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"s\"), \" will generate the source tarball for the repo and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"i\"), \" will install it after a successful build. Be ready with your root password for the install!\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/l0He4nkyI5cMhXzvW/giphy.gif\",\n    \"alt\": \"Personal Reqs Done\"\n  })))), mdx(\"h3\", null, \"Dev.to's Prerequisites\"), mdx(\"p\", null, \"Next came setting up dev.to's repo for development. It can be an intimidating task at first but stick it out and you are in for a treat! Open the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.dev.to/installation/linux/\"\n  }), \"Linux Installation guide\"), \" from their docs and keep it handy. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First comes the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Ruby\"), \" installation. Manjaro already comes with Ruby 2.6.4 but Dev's repo requires 2.6.3, so be sure to be careful throughout these steps as to not get caught up later on.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/rbenv/rbenv-installer#rbenv-installer\"\n  }), \"rbenv-installer\"), \" for getting rbenv, follow the steps in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"README.md\"), \". The installer should install rbenv smoothly and then run rbenv-doctor automatically. It will ask you to 2 paths to your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATH\"), \" variable.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have to add these manually to your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".bashrc\"), \" file (hidden by default) in your home directory. To keep it simple, I recommend initially to just use the inbuilt text-editor (Kate) for editing it. Open your File Manager, go to your home directory, enable viewing hidden files in Extras/Controls. Open \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".bashrc\"), \" by double-clicking on it and scroll to the bottom.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add the line \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"export PATH=\\\"<paths>:$PATH\\\"\"), \" to the bottom in order to make rbenv command functional. There will be 2 paths to add which will be mentioned by the install command one after other. Replace \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<path>\"), \" with those two paths, separating both by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rbenv-doctor\"), \" again to check if everything is set up correctly. Type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rbenv -v\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next, Restart your terminal and run, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rbenv install 2.6.3\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eval \\\"$(rbenv init -)\\\"\"), \" in the next line after the PATH line in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".bashrc\"), \" to initialize rbenv by default when you open the terminal. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ruby -v\"), \" after restarting your terminal to ensure both have been set up correctly. The Ruby version should point to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"2.6.3xxxx\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next in line is \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Yarn\"), \". Open it's \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://yarnpkg.com/en/docs/install#arch-stable\"\n  }), \"Installation Page for Arch\"), \" and run the command as indicated. Once installed run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn -v\"), \" to confirm the installation. You might have to add it to the path in some cases, which you can do as indicated later on the installation page.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installing it via \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm\"), \" is not recommended.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next comes \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PostgreSQL\"), \". Go to its download page for \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.postgresql.org/download/linux/\"\n  }), \"Other Linux distros\"), \" and download the interactive \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"EnterpriseDB\"), \" installer.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once downloaded, open the terminal in the same directory. Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"chmod +x postgresql-10.10-2-linux-x64.run\"), \", replacing the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"postgresql-10.10-2-linux-x64.run\"), \" with appropriate downloaded file name. This gives it executable permissions. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo ./postgresql-10.10-2-linux-x64.run\"), \" or whatever the package name might be to start the installer. Follow the instruction. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Be sure to remember the password set for postgres here\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you need a GUI for PostgreSQL, you will need \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pgAdmin4\"), \". The one that comes by default with the PostgreSQL installer doesn't work correctly on my PC, So I grabbed it via \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Pacman\"), \". Run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sudo Pacman -S pgadmin4\"), \" to install it.\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/7JTpNYu7oYGX98KJkL/giphy.gif\",\n    \"alt\": \"Almost done?!\"\n  }))), mdx(\"h3\", null, \"The Dev.to Repo\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once done with PostgreSQL, it's finally time to move on to getting the actual repo on your system. Follow the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.dev.to/installation/linux/#installing-dev\"\n  }), \"Steps\"), \" on the Linux Setup guide to Fork and Clone \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dev.to\"), \" repo. Follow it thoroughly till you reach \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Step 5\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Before Step 5, go to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.dev.to/installation/postgresql/#configuration\"\n  }), \"PostgreSQL Configuration\"), \" section and do accordingly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Next, run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bin/setup\"), \" as indicated in Step 5. Troubleshoot errors if any as shown in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Possible error messages\"), \" of both \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.dev.to/installation/windows/\"\n  }), \"Windows\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.dev.to/installation/linux/\"\n  }), \"Linux\"), \" docs.\")), mdx(\"p\", null, \"Finally, if all goes well, you will get an awesome \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Dev\"), \" Banner in your console at the end of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bin/setup\"), \".\"), mdx(\"p\", null, \"Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bin/startup\"), \" to see the server bootup and have the massive ecosystem of dev running on your tiny computer.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/5p2wQFyu8GsFO/giphy.gif\",\n    \"alt\": \"Amazing\"\n  }))), mdx(\"p\", null, \"Have an amazing Hacktoberfest, all the best with your PRs and Happy Coding!\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"EDIT The guide is no longer up to date as there have been significant changes to the platform. Do refer to latest guidelines on  https…","timeToRead":4,"wordCount":{"words":1035},"frontmatter":{"title":"Setting up Dev.to on Manjaro Linux for Hacktoberfest","tags":["hacktoberfest","linux","manjaro","tutorial"],"date":"2019-09-30T00:00:00.000Z","dateModified":null,"author":null,"status":null,"isPrivate":null,"featuredImage":null,"embeddedImages":null},"fields":{"slug":"/posts/2019/09/setting-up-DEV-on-manjaro-linux-for-hacktoberfest/","owner":"source","parent":"posts"}}},"pageContext":{"id":"81928890-bbd6-5721-81f6-44c10f7dc43d","prev":{"frontmatter":{"title":"Dev Diary - Hacktoberfest 2019, Week 1 - Regex & Ruby","status":null},"fields":{"slug":"/posts/2019/10/dev-notes-hacktoberfest-week-1/"}},"next":{"frontmatter":{"title":"GadgetCMS","status":null},"fields":{"slug":"/projects/gadget-cms/"}},"parent":"posts"}}}