{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/components/SourceArticle/SourceArticle.js","webpack:///./node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/SourceLayout.js"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","result","Function","call","formatDate","date","format","Date","SourceArticle","title","tags","dateModified","author","isPrivate","featuredImage","embedded","body","timeToRead","wordCount","Main","variant","sx","mb","childImageSharp","fluid","alt","originalName","as","flexWrap","width","color","textAlign","words","map","tag","index","mr","mix","borderColor","singleMdx","SourceLayout","data","excerpt","frontmatter","useConfig","site","siteMetadata","name","siteUrl","siteImage","lang","embeddedImages","reduce","images","image","pathname","location","Seo","type","titleTemplate","description","src","path","keywords"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,qBCjCF,IAAIS,EAAU,EAAQ,QAClBC,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QACfC,GAAc,EAAQ,QAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,GAAM,WACzB,SAASM,KACT,QAASJ,GAAW,cAA6B,GAAII,aAAcA,MAEjEC,GAAYP,GAAM,WACpBE,GAAW,kBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQ1B,OAAO2B,WACnDE,EAASC,SAASL,MAAMM,KAAKb,EAAQU,EAAUT,GACnD,OAAOX,EAASqB,GAAUA,EAASD,M,mTCzBjCI,EAAa,SAAAC,GAAI,OAAIC,YAAO,IAAIC,KAAKF,GAAO,YAErCG,EAAgB,SAAC,GAYvB,IAXLC,EAWI,EAXJA,MACAC,EAUI,EAVJA,KACAL,EASI,EATJA,KACAM,EAQI,EARJA,aACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,UACAC,EAKI,EALJA,cACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAC,EACI,EADJA,UAEA,OACE,kBAACC,EAAA,EAAD,KACGN,GACC,kBAAC,WAAD,KACE,kBAAC,QAAD,CAAOO,QAAQ,SAAf,0BACA,kBAAC,UAAD,OAIJ,kBAAC,MAAD,CAAKC,GAAI,CAAEC,GAAI,IACZR,GAAiBA,EAAcS,iBAC9B,kBAAC,IAAD,CACEC,MAAOV,EAAcS,gBAAgBC,MACrCC,IAAKX,EAAcS,gBAAgBC,MAAME,gBAI/C,kBAAC,UAAD,CAASC,GAAG,KAAKP,QAAQ,YAAYC,GAAI,CAAEC,GAAI,IAC5Cb,GAEH,kBAAC,OAAD,CAAMY,GAAI,CAAEO,SAAU,SACpB,kBAAC,MAAD,CACEP,GAAI,CACFQ,MAAO,CAAC,OAAQ,SAGjBxB,GACC,kBAAC,OAAD,CAAMgB,GAAI,CAAES,MAAO,UAAnB,mBACmB1B,EAAWC,KAIlC,kBAAC,MAAD,CACEgB,GAAI,CACFQ,MAAO,CAAC,OAAQ,SAGjBlB,GACC,kBAAC,OAAD,CACEU,GAAI,CACFS,MAAO,QACPC,UAAW,CAAC,OAAQ,WAHxB,kBAMkB3B,EAAWO,MAMnC,kBAAC,OAAD,CAAMU,GAAI,CAAEO,SAAU,SACpB,kBAAC,MAAD,CACEP,GAAI,CACFQ,MAAO,CAAC,OAAQ,SAGlB,kBAAC,OAAD,CACER,GAAI,CAAES,MAAO,UACVb,EAFL,eAE8BC,EAAUc,MAFxC,WAIDpB,GACC,kBAAC,MAAD,CACES,GAAI,CACFQ,MAAO,CAAC,OAAQ,SAGlB,kBAAC,OAAD,CAAMR,GAAI,CAAES,MAAO,QAASC,UAAW,CAAC,OAAQ,WAAhD,WACWnB,KAMjB,kBAAC,UAAD,MAECF,GACCA,EAAKuB,KAAI,SAACC,EAAKC,GAAN,OACP,kBAAC,QAAD,CACE7D,IAAK6D,EACLf,QAAQ,UACRC,GAAI,CACFC,GAAI,EACJc,GAAI,EACJN,MAAOO,YAAI,QAAS,UAAV,GAAwBF,EAAQzB,EAAKhB,QAC/C4C,YAAaD,YAAI,QAAS,UAAV,GAAwBF,EAAQzB,EAAKhB,UAGtDwC,MAIP,kBAAC,UAAD,MACA,kBAAC,cAAD,KACE,kBAAC,cAAD,CAAanB,SAAUA,GAAWC,M,kWCpH1C,IAkFauB,EAAS,aA4DPC,UA5IM,SAAC,GAIf,IAAD,IAHJC,KACEhF,IAAOuD,EAEL,EAFKA,KAAM0B,EAEX,EAFWA,QAASC,EAEpB,EAFoBA,YAAa1B,EAEjC,EAFiCA,WAAYC,EAE7C,EAF6CA,UAE7C,EAKA0B,cAHFC,KACEC,aAAgBC,EAHhB,EAGgBA,KAAMC,EAHtB,EAGsBA,QAASC,EAH/B,EAG+BA,UAAWC,EAH1C,EAG0CA,KAK5CzC,EAQEkC,EARFlC,MACAC,EAOEiC,EAPFjC,KACAL,EAMEsC,EANFtC,KACAM,EAKEgC,EALFhC,aACAC,EAIE+B,EAJF/B,OACAC,EAGE8B,EAHF9B,UACAC,EAEE6B,EAFF7B,cACAqC,EACER,EADFQ,eAGIpC,EACJoC,GACAA,EAAeC,QAAO,SAACC,EAAQC,EAAOnB,GAMpC,OALAkB,EA3BY,SA2BUlB,EAAQ,IAAOkB,EA3BzB,SA4BKlB,EAAQ,K,+VADY,IAGhCmB,EAAM/B,iBAEJ8B,IACN,IAEL,OACE,kBAAC,IAAD,KACE,kBAAC,WAAD,MACG,YAAmB,IACVE,EADS,EAAfC,SACMD,SACR,OACE,kBAAC,WAAD,KACE,kBAACE,EAAA,EAAD,CACEC,KAAK,UACLjD,MAAOsC,EACPY,cAAelD,EACfmD,YAAalB,EACbM,QAASA,EACTM,MACExC,GAAiBA,EAAcS,gBAC3BT,EAAcS,gBAAgBC,MAAMqC,IACpCZ,EAENa,KAAMP,EACNQ,SAAUrD,EACVwC,KAAMA,IAER,kBAAC,EAAD,CACEzC,MAAOA,EACPC,KAAMA,EACNL,KAAMA,EACNM,aAAcA,EACdC,OAAQA,EACRC,UAAWA,EACXC,cAAeA,EACfC,SAAUA,EACVC,KAAMA,EACNC,WAAYA,EACZC,UAAWA","file":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js-c1bd5dd5ee5fb836ee11.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { MDXProvider } from '@mdx-js/react'\nimport {\n  Heading,\n  Badge,\n  Text,\n  Flex,\n  Box,\n  Divider,\n  Alert,\n} from '@theme-ui/components'\nimport { mix } from '@theme-ui/color'\nimport { format } from 'date-fns'\nimport Img from 'gatsby-image'\n\nimport { Main } from '../Main'\n\nconst formatDate = date => format(new Date(date), 'd-MMM-u')\n\nexport const SourceArticle = ({\n  title,\n  tags,\n  date,\n  dateModified,\n  author,\n  isPrivate,\n  featuredImage,\n  embedded,\n  body,\n  timeToRead,\n  wordCount,\n}) => {\n  return (\n    <Main>\n      {isPrivate && (\n        <Fragment>\n          <Alert variant=\"error\">This is a private post</Alert>\n          <Divider />\n        </Fragment>\n      )}\n\n      <Box sx={{ mb: 4 }}>\n        {featuredImage && featuredImage.childImageSharp && (\n          <Img\n            fluid={featuredImage.childImageSharp.fluid}\n            alt={featuredImage.childImageSharp.fluid.originalName}\n          />\n        )}\n      </Box>\n      <Heading as=\"h1\" variant=\"styles.h1\" sx={{ mb: 4 }}>\n        {title}\n      </Heading>\n      <Flex sx={{ flexWrap: 'wrap' }}>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          {date && (\n            <Text sx={{ color: 'muted' }}>\n              Date published: {formatDate(date)}\n            </Text>\n          )}\n        </Box>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          {dateModified && (\n            <Text\n              sx={{\n                color: 'muted',\n                textAlign: ['left', 'right'],\n              }}\n            >\n              Date modified: {formatDate(dateModified)}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n\n      <Flex sx={{ flexWrap: 'wrap' }}>\n        <Box\n          sx={{\n            width: ['100%', '50%'],\n          }}\n        >\n          <Text\n            sx={{ color: 'muted' }}\n          >{`${timeToRead} min read / ${wordCount.words} words`}</Text>\n        </Box>\n        {author && (\n          <Box\n            sx={{\n              width: ['100%', '50%'],\n            }}\n          >\n            <Text sx={{ color: 'muted', textAlign: ['left', 'right'] }}>\n              Author: {author}\n            </Text>\n          </Box>\n        )}\n      </Flex>\n\n      <Divider />\n\n      {tags &&\n        tags.map((tag, index) => (\n          <Badge\n            key={index}\n            variant=\"primary\"\n            sx={{\n              mb: 2,\n              mr: 2,\n              color: mix('muted', 'primary', `${index / tags.length}`),\n              borderColor: mix('muted', 'primary', `${index / tags.length}`),\n            }}\n          >\n            {tag}\n          </Badge>\n        ))}\n\n      <Divider />\n      <MDXProvider>\n        <MDXRenderer embedded={embedded}>{body}</MDXRenderer>\n      </MDXProvider>\n    </Main>\n  )\n}\n\nSourceArticle.propTypes = {\n  /** Title frommatter\" */\n  title: PropTypes.string,\n  /** Tags from frontmatter */\n  tags: PropTypes.arrayOf(PropTypes.string),\n  /** Date from frontmatter */\n  date: PropTypes.string,\n  /** DateModified from frontmatter */\n  dateModified: PropTypes.string,\n  /** Author from frontmatter */\n  author: PropTypes.string,\n  /** isPrivate from frontMatter */\n  isPrivate: PropTypes.bool,\n  /** FeaturedImage from frontmatter */\n  featuredImage: PropTypes.any,\n  /** embeddedImage array from SourceLayout */\n  embedded: PropTypes.any,\n  /** body from SourceLayout */\n  body: PropTypes.any,\n  /** timeToRead from SourceLayout */\n  timeToRead: PropTypes.number,\n  /** wordCount from SourceLayout */\n  wordCount: PropTypes.shape({\n    words: PropTypes.number,\n  }),\n}\n","import React, { Fragment } from 'react'\nimport { Location } from '@reach/router'\nimport { graphql } from 'gatsby'\n\nimport { ContextProvider } from '../context'\n\nimport { Seo } from '../components/Seo'\nimport { SourceArticle } from '../components/SourceArticle'\n\nimport { useConfig } from '../data'\n\nconst IMAGE_KEY = 'image'\n\nconst SourceLayout = ({\n  data: {\n    mdx: { body, excerpt, frontmatter, timeToRead, wordCount },\n  },\n}) => {\n  const {\n    site: {\n      siteMetadata: { name, siteUrl, siteImage, lang },\n    },\n  } = useConfig()\n\n  const {\n    title,\n    tags,\n    date,\n    dateModified,\n    author,\n    isPrivate,\n    featuredImage,\n    embeddedImages,\n  } = frontmatter\n\n  const embedded =\n    embeddedImages &&\n    embeddedImages.reduce((images, image, index) => {\n      images[`${IMAGE_KEY}${index + 1}`] = images[\n        `${IMAGE_KEY}${index + 1}`\n      ] || {\n        ...image.childImageSharp,\n      }\n      return images\n    }, {})\n\n  return (\n    <ContextProvider>\n      <Location>\n        {({ location }) => {\n          const { pathname } = location\n          return (\n            <Fragment>\n              <Seo\n                type=\"article\"\n                title={name}\n                titleTemplate={title}\n                description={excerpt}\n                siteUrl={siteUrl}\n                image={\n                  featuredImage && featuredImage.childImageSharp\n                    ? featuredImage.childImageSharp.fluid.src\n                    : siteImage\n                }\n                path={pathname}\n                keywords={tags}\n                lang={lang}\n              />\n              <SourceArticle\n                title={title}\n                tags={tags}\n                date={date}\n                dateModified={dateModified}\n                author={author}\n                isPrivate={isPrivate}\n                featuredImage={featuredImage}\n                embedded={embedded}\n                body={body}\n                timeToRead={timeToRead}\n                wordCount={wordCount}\n              />\n            </Fragment>\n          )\n        }}\n      </Location>\n    </ContextProvider>\n  )\n}\n\n// This query is a duplicate of useAllMdx so if you update this one update that one too! in data/useAllMdx\n// test id: c147b696-2ac9-58b3-a3e6-17d8402289e0\n// draft id: c2a66bb2-6fc4-5b03-94f1-e31abea07a59\n\nexport const singleMdx = graphql`\n  query singleMdx($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      excerpt\n      timeToRead\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        tags\n        date\n        dateModified\n        author\n        status\n        isPrivate\n        featuredImage {\n          childImageSharp {\n            original {\n              width\n              height\n              src\n            }\n            fluid(maxWidth: 1200, quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n            fixed(quality: 90) {\n              ...GatsbyImageSharpFixed\n            }\n            id\n          }\n        }\n        embeddedImages {\n          childImageSharp {\n            original {\n              width\n              height\n              src\n            }\n            fluid(maxWidth: 1200, quality: 90) {\n              ...GatsbyImageSharpFluid\n            }\n            fixed(quality: 90) {\n              ...GatsbyImageSharpFixed\n            }\n            id\n          }\n        }\n      }\n      fields {\n        slug\n        owner\n        parent\n      }\n    }\n  }\n`\n\nexport default SourceLayout\n"],"sourceRoot":""}