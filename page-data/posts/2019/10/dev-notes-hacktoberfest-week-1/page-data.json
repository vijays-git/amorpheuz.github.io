{"componentChunkName":"component---node-modules-pauliescanlon-gatsby-theme-terminal-src-layouts-source-layout-js","path":"/posts/2019/10/dev-notes-hacktoberfest-week-1/","result":{"data":{"mdx":{"id":"6c7aaca3-0fef-5c87-b742-29e42e84b512","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dev Diary - Hacktoberfest 2019, Week 1 - Regex & Ruby\",\n  \"tags\": [\"ruby\", \"hacktoberfest\", \"webdev\"],\n  \"date\": \"2019-10-07T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hey everyone! I would love to share my journey throughout Hacktoberfest with you all. Here is how my week 1 went.\"), mdx(\"p\", null, \"While browsing through dev the week before Hacktobest began, I noticed certain links broken in a few articles. I had already started contributing to dev.to's repo, albeit small-time, and thus was fully aware of how bug reporting worked. Off I went to GitHub and opened  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/issues/4101\"\n  }), \"Links in Comments get appended by dev.to's URL #4101\"), \"!\"), mdx(\"p\", null, \"One of the contributors to the repo, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/_akshaym\"\n  }), \"Akshay Mahajan\"), \", pointed out that it might be due to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"href\"), \" attribute of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" tag missing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"https://\"), \" protocol. I did some searching of my own after the hint which led to me finding out that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"href\"), \" tag needs to have the protocol defined for it to know that it is a separate link and not a relative path to a file on the server. \"), mdx(\"p\", null, \"Time to figure out what causes this kind of link to appear in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"href\"), \" tag. I loaded up my development repo on VS-Code and entered in a simple link:\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[Test](google.com)\"), \" \"), mdx(\"p\", null, \"Aha! I had managed to replicate the issue. The markdown parser did not account for whether the http(s) protocol was passed along with the URL or not. I grabbed the issue as something I would like to tackle and moved ahead onto figuring out a solution.\"), mdx(\"p\", null, \"The technical overview is the place to start whenever contributing to dev, it provides a complete picture of all the technologies that power it and enables any contributor to know exactly what they are looking in the massive repo. I found out that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/vmg/redcarpet\"\n  }), \"Redcarpet\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/rouge-ruby/rouge\"\n  }), \"Rouge\"), \" empower markdown parsing. A basic overview of RedCarpet's readme allowed me to figure out what exactly I should be looking out for.\"), mdx(\"p\", null, \"Turns out there was already a file that was performing another task on the links and I had to just add my logic to the same. I decided that regex was the way to go for detecting if the link contained http(s) or not. I pulled up my favorite tool for regex, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://regex101.com/\"\n  }), \"Regex101\"), \", switched to the unit testing mode and started formulating the regex. \"), mdx(\"p\", null, \"The initial solution I came up with was \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/^(http(s*):\\\\/\\\\/)/m\"), \". It seemed to pass all the tests and I happily opened a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/thepracticaldev/dev.to/pull/4155\"\n  }), \"PR\"), \"!\"), mdx(\"p\", null, \"Turns out my familiarity with Regex is still beginner tier, and there are a lot of subtleties involved when working with regex. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/rhymes\"\n  }), \"Rhymes\"), \", one of the core team members, pointed out various flaws which I happily formulated a fix for. He also requested me to configure tests for the same. \"), mdx(\"p\", null, \"Here's where I hit a roadblock, I am still learning ruby and have never written a test in any other language I am familiar with throughout my development career (I swear this is the year that changes). I also had my university exams (Ongoing as I write this post) which were going to last for the better half of the month. I notified about the same on the PR and since it was a core feature of dev that the fix was affecting, Rhymes requested whether one of the core contributors would see the PR to completion.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://dev.to/maestromac\"\n  }), \"Mac\"), \" came to my PR's rescue and carried it all the way to completion along with Rhymes and I am happy to report that the PR has been successfully merged. \\uD83C\\uDF89\\uD83C\\uDF89\"), mdx(\"p\", null, \"I am extremely satisfied to have such an adventurous first week in Hactoberfest and finally being able to contribute at a core functionality level (although partially) from the minor CSS fixes here and there.\"), mdx(\"p\", null, \"Once again, thank you to all the people that helped me throughout my first week and a ton of thanks to all of them:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.to/_akshaym\"\n  }), \"Akshay Mahajan\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.to/rhymes\"\n  }), \"Rhymes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.to/maestromac\"\n  }), \"Mac Siri\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Hey everyone! I would love to share my journey throughout Hacktoberfest with you all. Here is how my week 1 went. While browsing through devâ€¦","timeToRead":2,"wordCount":{"words":616},"frontmatter":{"title":"Dev Diary - Hacktoberfest 2019, Week 1 - Regex & Ruby","tags":["ruby","hacktoberfest","webdev"],"date":"2019-10-07T00:00:00.000Z","dateModified":null,"author":null,"status":null,"isPrivate":null,"featuredImage":null,"embeddedImages":null},"fields":{"slug":"/posts/2019/10/dev-notes-hacktoberfest-week-1/","owner":"source","parent":"posts"}}},"pageContext":{"id":"6c7aaca3-0fef-5c87-b742-29e42e84b512","prev":{"frontmatter":{"title":"Adding the DEV badge to github.dev starter website","status":null},"fields":{"slug":"/posts/2019/10/adding-dev-badge-to-github-starter/"}},"next":{"frontmatter":{"title":"Setting up Dev.to on Manjaro Linux for Hacktoberfest","status":null},"fields":{"slug":"/posts/2019/09/setting-up-DEV-on-manjaro-linux-for-hacktoberfest/"}},"parent":"posts"}}}